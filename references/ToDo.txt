To do:
x In the formula class, work on the method calc_natural
x    Allow chemical formulas to be entered without 1s by insert the 1s into a formula if they are absent.
x    I don't like the specification of n_rel_abun. Get rid of this by storing atom MIDs in a dictionary.
x    Why are the entries in the atom_abundances dictionary pandas.Series instead of np.arrays?
x        Do not need to be, changed them to np.arrays.
x    Make the atoms MIDs an attribute of an object that can be changed - done by using text file to insert them
-        Allow the user to specify where the program gets the AtomMIDs txt file from: This is done in the AtomClass definition file. You will have to pass a directory to the Atom object.
x In the expand_polynomial function, shorten factored_aggregated in a way that considers the resulting MID values
x In the fragment class, work on create_correction_matrix
x     make the MIDs the same length by adding zeros to make all of them the same length as the longest MID in the correction matrix
x     instead of having a 'MetaboliteAtoms' attribute, have a 'CanAcquireLabel' attribute
x         I think it will be used identically, so just renaming an attribute of the Fragment class to be more reflective of what it is
x     In the fragment class make CM a dictionary with entries for C, H, N, and O.
x         make a way to specify this in the text file
x     If possible, eliminate the use of pandas by using matrices or multidimensional numpy arrays instead of pandas data frames
x Test that a text file can be input by the GUI
x Call the software package PolyMID
x     Function call should me PolyMID.correct()
x     Make PolyMID.natural()
x Have options for high resolution data
x Have an option to correct for incorporation of specific atoms (H, C, N, etc.)
x Have an option to specify tracer proportion (e.g. 50% of glucose is the tracer) and relative atom enrichment of labeled atoms (of the atoms that are supposed to be labeled, 97% are labeled).
x Make the calculation of the Hv atom MID work if the MIDs in the text file for Hv and the labeled atom are different lengths (defining AtomClass.py line 68)
- Remove the use of pandas from expand_polynomial() function IF data frames are not used as they are intended to be (unordered and columns labeled).
x create child classes instead of passing everything down the line from input to atom
x     this is not appropriate because 'formula' is an attribute of 'fragment' and child definitions would be recursive
x Get all inputs from the text file or from the fragment object
x In input class, make sure initialization of CM works - predefined list of atoms?
x     CM is also specific to enrichment. Store CMs in a separate text file.
- Have the format of the input text file explained in the comments of correct.py
x replace MIDu with MIDm
- read multiple fragments from same text file
x change AtomLabeled to LabeledElement
x make the correct and natural programs start with capitals
x input the text file using the prompt if nothing is specified: already did this!



Not related to program function
- Get the proper license to share this (MIT License looks good?)
- package it in pip
-     add numpy and pandas as dependencies
- copyright PolyMID



Outside of PolyMID correct() and natural():
- Have an option for the library file to be updated with a calculated CM - do this outside of polymid.correct