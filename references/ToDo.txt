To do:
x In the formula class, work on the method calc_natural
x    Allow chemical formulas to be entered without 1s by insert the 1s into a formula if they are absent.
x    I don't like the specification of n_rel_abun. Get rid of this by storing atom MIDs in a dictionary.
x    Why are the entries in the atom_abundances dictionary pandas.Series instead of np.arrays?
x        Do not need to be, changed them to np.arrays.
x    Make the atoms MIDs an attribute of an object that can be changed - done by using text file to insert them
x In the expand_polynomial function, shorten factored_aggregated in a way that considers the resulting MID values
x In the fragment class, work on create_correction_matrix
x     make the MIDs the same length by adding zeros to make all of them the same length as the longest MID in the correction matrix
x     instead of having a 'MetaboliteAtoms' attribute, have a 'CanAcquireLabel' attribute
x         I think it will be used identically, so just renaming an attribute of the Fragment class to be more reflective of what it is
x     In the fragment class make CM a dictionary with entries for C, H, N, and O.
x         make a way to specify this in the text file
x     If possible, eliminate the use of pandas by using matrices or multidimensional numpy arrays instead of pandas data frames
x Test that a text file can be input by the GUI
x Call the software package PolyMID
x     Function call should me PolyMID.correct()
x     Make PolyMID.natural()
x Have options for high resolution data
x Have an option to correct for incorporation of specific atoms (H, C, N, etc.)
- Have an option to specify tracer proportion (e.g. 50% of glucose is the tracer) and relative atom enrichment of labeled atoms (of the atoms that are supposed to be labeled, 97% are labeled).
- Try to remove the use of pandas from expand_polynomial() function.



Outside of PolyMID correct() and natural():
- Have an option for the library file to be updated with a calculated CM - do this outside of polymid.correct